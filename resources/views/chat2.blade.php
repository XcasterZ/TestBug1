<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <meta http-equiv="X-UA-Compatible" content="ie=edge">
    <title>Chat Application</title>
    <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css">
    <meta name="csrf-token" content="{{ csrf_token() }}">
    <script src="https://cdn.jsdelivr.net/npm/axios/dist/axios.min.js"></script>
    <!-- ‡∏ô‡∏≥‡πÄ‡∏Ç‡πâ‡∏≤‡∏ü‡∏≠‡∏ô‡∏ï‡πå Kanit ‡∏à‡∏≤‡∏Å Google Fonts -->
    <link href="https://fonts.googleapis.com/css2?family=Kanit:wght@300;400;600&display=swap" rel="stylesheet">

    <style>
        /* ‡πÉ‡∏ä‡πâ‡∏ü‡∏≠‡∏ô‡∏ï‡πå Kanit ‡∏ó‡∏±‡πà‡∏ß‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏ô‡πâ‡∏≤‡πÄ‡∏ß‡πá‡∏ö */
        body,
        h1,
        h5,
        h4,
        .list-group-item,
        .alert {
            font-family: 'Kanit', sans-serif;
        }

        body {
            background-color: #f8f9fa;
            /* height: 100vh; */
            overflow-y: auto;
            /* ‡πÄ‡∏û‡∏¥‡πà‡∏° scrollbar ‡πÄ‡∏°‡∏∑‡πà‡∏≠‡πÄ‡∏ô‡∏∑‡πâ‡∏≠‡∏´‡∏≤‡πÄ‡∏Å‡∏¥‡∏ô‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏π‡∏á */
        }

        #recipient_input {
            display: none;
        }

        .app {

            display: flex;
            flex-direction: column;
            height: 100%;
            max-width: 800px;
            margin: auto;
            border: 1px solid #ccc;
            border-radius: 10px;
            box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
            overflow: hidden;
            margin-top: 10px;
        }

        header {
            background-color: #007bff;
            padding: 1rem;
        }

        #messages {
            flex: 1;
            overflow-y: auto;
            border: 1px solid #ccc;
            border-radius: 5px;
            background-color: #ffffff;
            margin: 15px;
            margin-right: 0px;
            padding: 10px;
            box-shadow: 0 0 5px rgba(0, 0, 0, 0.1);
            height: 400px;
        }

        .flex-fill {
            padding: 10px;
        }

        .message {
            display: block;
            /* ‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡πÅ‡∏ï‡πà‡∏•‡∏∞‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏à‡∏∞‡∏≠‡∏¢‡∏π‡πà‡∏Ñ‡∏ô‡∏•‡∏∞‡∏ö‡∏£‡∏£‡∏ó‡∏±‡∏î */
            padding: 8px;
            border-radius: 5px;
            word-wrap: break-word;
            width: fit-content;
            /* ‡πÉ‡∏´‡πâ‡∏û‡∏∑‡πâ‡∏ô‡∏´‡∏•‡∏±‡∏á‡∏°‡∏µ‡∏Ç‡∏ô‡∏≤‡∏î‡∏ï‡∏≤‡∏°‡∏Ñ‡∏ß‡∏≤‡∏°‡∏¢‡∏≤‡∏ß‡∏Ç‡∏≠‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏° */
            max-width: 80%;
            /* ‡∏à‡∏≥‡∏Å‡∏±‡∏î‡∏Ñ‡∏ß‡∏≤‡∏°‡∏Å‡∏ß‡πâ‡∏≤‡∏á‡∏™‡∏π‡∏á‡∏™‡∏∏‡∏î‡∏Ç‡∏≠‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏° */
            margin-bottom: 10px;
        }

        .message.sent {
            text-align: right;
            margin-left: auto;
            background-color: #d4edda;
        }

        .message.received {
            text-align: left;
            margin-right: auto;
            background-color: #f1f1f1;
        }


        .input-group {
            margin: 15px;
            display: flex;
        }

        #message_input {
            flex-grow: 0.97;
            width: 0;
        }

        #attach_image {
            min-width: 40px;
            /* ‡∏Å‡∏≥‡∏´‡∏ô‡∏î‡∏Ç‡∏ô‡∏≤‡∏î‡∏Ç‡∏±‡πâ‡∏ô‡∏ï‡πà‡∏≥‡∏Ç‡∏≠‡∏á‡∏õ‡∏∏‡πà‡∏°‡πÅ‡∏ô‡∏ö‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û */
        }

        .users-list {
            border-right: 1px solid #ccc;
        }

        .users-list h4 {
            padding: 10px;
            text-align: center;
        }

        .list-group-item {
            cursor: pointer;
            margin-right: 10px;
            white-space: nowrap;
            overflow: hidden;
            text-overflow: ellipsis;
        }

        .list-group-item:hover {
            background-color: #e9ecef;
        }

        #selected-user {
            margin: 15px;
            margin-right: 0;
            text-align: center;
        }

        .input-group-append {
            display: flex;
        }

        #message_send {
            height: 100%;
            min-width: 40px;
            max-width: 60px;
        }

        .users-list h4 {
            font-size: 1.5rem;
        }

        #back_button {
            /* position: absolute; ‡∏ó‡∏≥‡πÉ‡∏´‡πâ‡∏õ‡∏∏‡πà‡∏°‡∏≠‡∏¢‡∏π‡πà‡∏ó‡∏µ‡πà‡∏ï‡∏≥‡πÅ‡∏´‡∏ô‡πà‡∏á‡πÅ‡∏ô‡πà‡∏ô‡∏≠‡∏ô */
            width: calc(100% - 10px);
            /* ‡∏•‡∏î‡∏Ñ‡∏ß‡∏≤‡∏°‡∏Å‡∏ß‡πâ‡∏≤‡∏á‡∏Ç‡∏≠‡∏á‡∏õ‡∏∏‡πà‡∏°‡∏•‡∏á 10px */
            top: 50%;
            /* ‡πÅ‡∏ô‡∏ß‡∏ô‡∏≠‡∏ô‡∏ï‡∏£‡∏á‡∏Å‡∏•‡∏≤‡∏á */
            transform: translateY(-50%);
            /* ‡∏õ‡∏£‡∏±‡∏ö‡∏ï‡∏≥‡πÅ‡∏´‡∏ô‡πà‡∏á‡πÉ‡∏´‡πâ‡∏Å‡∏•‡∏≤‡∏á‡πÅ‡∏ô‡∏ß‡∏ô‡∏≠‡∏ô */
            background-color: #1e00ff;
            /* ‡∏û‡∏∑‡πâ‡∏ô‡∏´‡∏•‡∏±‡∏á */
            border: none;
            /* ‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Ç‡∏≠‡∏ö */
            color: rgb(255, 255, 255);
            /* ‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡∏™‡∏µ‡∏ï‡∏±‡∏ß‡∏≠‡∏±‡∏Å‡∏©‡∏£‡πÄ‡∏õ‡πá‡∏ô‡∏Ç‡∏≤‡∏ß */
            font-size: 1rem;
            /* ‡∏Ç‡∏ô‡∏≤‡∏î‡∏ü‡∏≠‡∏ô‡∏ï‡πå */
            cursor: pointer;
            /* ‡πÅ‡∏™‡∏î‡∏á‡πÄ‡∏õ‡πá‡∏ô pointer ‡πÄ‡∏°‡∏∑‡πà‡∏≠ hover */
            border-radius: 50px;
            /* ‡∏ó‡∏≥‡πÉ‡∏´‡πâ‡∏Ç‡∏≠‡∏ö‡∏°‡∏ô */
            padding: 10px;
            /* ‡πÄ‡∏û‡∏¥‡πà‡∏° padding ‡∏£‡∏≠‡∏ö‡πÜ ‡∏õ‡∏∏‡πà‡∏° */
            transition: background-color 0.3s ease;
            /* ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Å‡∏≤‡∏£‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡πÅ‡∏õ‡∏•‡∏á‡∏Ç‡∏≠‡∏á‡∏™‡∏µ‡∏û‡∏∑‡πâ‡∏ô‡∏´‡∏•‡∏±‡∏á‡πÄ‡∏°‡∏∑‡πà‡∏≠ hover */
            margin-right: 10px;
            /* ‡πÄ‡∏ß‡πâ‡∏ô‡∏Ç‡∏≠‡∏ö‡∏î‡πâ‡∏≤‡∏ô‡∏Ç‡∏ß‡∏≤ 10px */
            margin-bottom: -20px;
            margin-top: 30px;
        }


        #back_button:hover {
            background-color: rgba(30, 0, 255, 0.7);
            /* ‡∏ó‡∏≥‡πÉ‡∏´‡πâ‡∏™‡∏µ‡∏à‡∏≤‡∏á‡∏•‡∏á‡πÄ‡∏°‡∏∑‡πà‡∏≠ hover */
            text-decoration: none;
            /* ‡πÑ‡∏°‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡πÄ‡∏™‡πâ‡∏ô‡πÉ‡∏ï‡πâ‡πÄ‡∏°‡∏∑‡πà‡∏≠ hover */
        }

        .product-info {
            background-color: #e9ecef;
            /* ‡∏™‡∏µ‡∏û‡∏∑‡πâ‡∏ô‡∏´‡∏•‡∏±‡∏á */
            border-radius: 5px;
            /* ‡∏Ç‡∏≠‡∏ö‡∏°‡∏ô */
            padding: 10px;
            /* ‡πÄ‡∏û‡∏¥‡πà‡∏° padding */
            margin-bottom: 15px;
            /* ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏£‡∏∞‡∏¢‡∏∞‡∏´‡πà‡∏≤‡∏á‡∏à‡∏≤‡∏Å‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏Å‡πà‡∏≠‡∏ô‡∏´‡∏ô‡πâ‡∏≤ */
        }


        @media (max-width: 768px) {
            .users-list h4 {
                font-size: 1.2rem;
            }
        }

        @media (max-width: 576px) {
            .users-list h4 {
                font-size: 1rem;
            }
        }
    </style>
</head>

<body>
    <div class="app d-flex">
        <header class="text-white text-center w-100">
            <h1>Chat Application</h1>
            <h5>Welcome, {{ $currentUser }}</h5>
        </header>

        <div class="d-flex flex-fill">
            <div class="users-list mt-3 w-25">
                <button id="back_button" onclick="goBack()"> ‚¨Ö back</button> <!-- ‡∏õ‡∏∏‡πà‡∏°‡∏¢‡πâ‡∏≠‡∏ô‡∏Å‡∏•‡∏±‡∏ö -->
                <h4>‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î</h4>
                <ul class="list-group">
                    @foreach ($users as $user)
                        <li class="list-group-item"
                            onclick="selectUser('{{ $user->username }}', '{{ $user->id }}')">
                            {{ $user->username }}
                        </li>
                    @endforeach
                </ul>
            </div>

            <div class="flex-fill">
                <div id="selected-user" class="alert alert-info">‡∏Å‡∏≥‡∏•‡∏±‡∏á‡πÅ‡∏ä‡∏ó‡∏Å‡∏±‡∏ö: <strong>‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Å‡∏≤‡∏£‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ</strong></div>
                <div id="messages" class="mb-3"></div>

                <form action="" id="message_form" class="input-group">
                    <div class="input-group-prepend">
                        <button type="button" id="attach_image" class="btn btn-secondary">üìé</button>
                    </div>
                    <input type="text" name="message" id="message_input" class="form-control"
                        placeholder="Message...." disabled>
                    <input type="text" id="recipient_input" placeholder="Recipient Username" required>
                    <div class="input-group-append">
                        <button type="submit" id="message_send" class="btn btn-success" disabled>Send</button>
                    </div>

                </form>
            </div>
        </div>
    </div>
    @vite('resources/js/app.js')

    <script>
        var loggedInUserId = parseInt('{{ auth()->check() ? auth()->user()->id : 0 }}', 10);
        window.loggedInUserId = {{ auth()->check() ? auth()->user()->id : 0 }};
        var usersMap = @json($users->pluck('username', 'id'));
        const loggedInUserName = '{{ Auth::user()->username }}'; // ‡∏™‡∏°‡∏°‡∏ï‡∏¥‡∏ß‡πà‡∏≤‡∏Ñ‡∏∏‡∏ì‡πÉ‡∏ä‡πâ Laravel ‡πÅ‡∏•‡∏∞ Auth
        let isSending = false;
        let currentUserId = null; // ‡∏Å‡∏≥‡∏´‡∏ô‡∏î currentUserId ‡∏ó‡∏µ‡πà‡∏ô‡∏µ‡πà

        if (loggedInUserId === 0 || loggedInUserName === null) {
            console.error('User is not authenticated.');
            window.location.href = '/login';
        }


        // ‡∏†‡∏≤‡∏¢‡πÉ‡∏ô event listener ‡∏Ç‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏™‡πà‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°
        document.getElementById('message_form').addEventListener('submit', function(e) {
            e.preventDefault();

            if (isSending) return; // ‡∏ñ‡πâ‡∏≤‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏™‡πà‡∏á‡∏≠‡∏¢‡∏π‡πà‡πÉ‡∏´‡πâ‡πÑ‡∏°‡πà‡∏ó‡∏≥‡∏≠‡∏∞‡πÑ‡∏£
            const recipientInput = document.getElementById("recipient_input");

            const message = document.getElementById('message_input').value;

            if (!currentUserId) {
                alert('‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏™‡πà‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏Å‡πà‡∏≠‡∏ô');
                return;
            }

            if (message.trim() === '') {
                alert('‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏Å‡∏£‡∏≠‡∏Å‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°');
                return; // ‡∏´‡∏¢‡∏∏‡∏î‡∏Å‡∏≤‡∏£‡∏ó‡∏≥‡∏á‡∏≤‡∏ô‡∏´‡∏≤‡∏Å‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ß‡πà‡∏≤‡∏á
            }

            isSending = true;
            axios.post('/send-message', {
                    message: message,
                    recipient: recipientInput.value, // ‡∏™‡πà‡∏á‡∏ä‡∏∑‡πà‡∏≠‡∏ú‡∏π‡πâ‡∏£‡∏±‡∏ö
                })
                .then(response => {
                    isSending = false;
                    if (response.data.success) {
                        // appendMessage(message, loggedInUserId, false); // ‡πÅ‡∏™‡∏î‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ó‡∏µ‡πà‡∏™‡πà‡∏á‡πÑ‡∏õ‡πÅ‡∏•‡πâ‡∏ß
                        document.getElementById('message_input').value = ''; // ‡∏™‡πà‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ú‡∏•‡∏¥‡∏ï‡∏†‡∏±‡∏ì‡∏ë‡πå
                    } else {
                        alert('‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏™‡πà‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡πÑ‡∏î‡πâ');
                    }
                })
                .catch(error => {
                    isSending = false;
                    console.error('Error:', error);
                });
        });

        document.addEventListener('DOMContentLoaded', function() {
            const username_login = loggedInUserName;
            const urlParams = new URLSearchParams(window.location.search);
            const sellerId = urlParams.get('seller_id'); // ‡∏£‡∏±‡∏ö‡∏Ñ‡πà‡∏≤‡∏à‡∏≤‡∏Å URL
            const productId = urlParams.get('product_id');
            const productImage = urlParams.get('image');
            const productName = urlParams.get('name');
            const productPrice = urlParams.get('price');
            const productQuantity = urlParams.get('quantity');
            const currentUrl = urlParams.get('current_url');

            // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡∏°‡∏µ seller_id ‡πÉ‡∏ô URL ‡πÅ‡∏•‡∏∞ seller_id ‡πÑ‡∏°‡πà‡∏ï‡∏£‡∏á‡∏Å‡∏±‡∏ö loggedInUserName
            if (sellerId && sellerId !== loggedInUserName) {
                selectUser(sellerId); // ‡πÄ‡∏£‡∏µ‡∏¢‡∏Å‡πÉ‡∏ä‡πâ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô selectUser ‡∏ó‡∏±‡∏ô‡∏ó‡∏µ
            }

            // ‡∏ñ‡πâ‡∏≤‡∏°‡∏µ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡∏ó‡∏µ‡πà‡∏™‡πà‡∏á‡∏°‡∏≤‡∏à‡∏≤‡∏Å shop.blade
            if (productId && productImage && productName && productPrice && productQuantity) {
                // ‡∏™‡∏£‡πâ‡∏≤‡∏á object ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÄ‡∏Å‡πá‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤
                const productMessage = {
                    productId: productId,
                    productImage: productImage,
                    productName: productName,
                    productPrice: productPrice,
                    productQuantity: productQuantity,
                    urlParams: urlParams,
                    sellerId: sellerId,
                    currentUrl: currentUrl,
                };

                // ‡πÄ‡∏£‡∏µ‡∏¢‡∏Å‡πÉ‡∏ä‡πâ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô appendMessage ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÅ‡∏™‡∏î‡∏á‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡∏ó‡∏±‡∏ô‡∏ó‡∏µ‡πÉ‡∏ô‡∏ä‡πà‡∏≠‡∏á‡πÅ‡∏ä‡∏ó
                appendMessage('', loggedInUserId, false, null, null, productMessage);
            }

        });

        function smoothScrollToBottom(element) {
            const targetPosition = element.scrollHeight;
            let currentPosition = element.scrollTop;
            const scrollStep = 10; // ‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏£‡πá‡∏ß‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡πÄ‡∏•‡∏∑‡πà‡∏≠‡∏ô
            const scrollInterval = 15; // ‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ñ‡∏µ‡πà‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡πÄ‡∏•‡∏∑‡πà‡∏≠‡∏ô (‡∏´‡∏ô‡πà‡∏ß‡∏¢‡∏°‡∏¥‡∏•‡∏•‡∏¥‡∏ß‡∏¥‡∏ô‡∏≤‡∏ó‡∏µ)

            function scroll() {
                if (currentPosition < targetPosition) {
                    currentPosition += scrollStep;
                    element.scrollTop = currentPosition;
                    requestAnimationFrame(scroll); // ‡πÄ‡∏£‡∏µ‡∏¢‡∏Å‡πÉ‡∏ä‡πâ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏ô‡∏µ‡πâ‡πÉ‡∏´‡∏°‡πà
                } else {
                    element.scrollTop = targetPosition; // ‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡∏ï‡∏≥‡πÅ‡∏´‡∏ô‡πà‡∏á‡∏™‡∏∏‡∏î‡∏ó‡πâ‡∏≤‡∏¢
                }
            }

            scroll(); // ‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏Å‡∏≤‡∏£‡πÄ‡∏•‡∏∑‡πà‡∏≠‡∏ô
        }

        function getChatHistory(username) {
            if (!username) return;

            axios.get('/chat-history/' + username)
                .then(response => {
                    let messages = document.getElementById('messages');
                    messages.innerHTML = ''; // ‡∏•‡πâ‡∏≤‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏Å‡πà‡∏≤‡∏Å‡πà‡∏≠‡∏ô

                    response.data.forEach(chat => {

                        console.log('sender', chat.sender_username); // ‡πÅ‡∏™‡∏î‡∏á‡∏ä‡∏∑‡πà‡∏≠‡∏ú‡∏π‡πâ‡∏™‡πà‡∏á
                        console.log('currentUserId', currentUserId);
                        console.log('recipient', chat.recipient); // ID ‡∏Ç‡∏≠‡∏á‡∏ú‡∏π‡πâ‡∏£‡∏±‡∏ö
                        console.log('loggedInUserId', loggedInUserId); // ID ‡∏Ç‡∏≠‡∏á‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏ó‡∏µ‡πà‡∏•‡πá‡∏≠‡∏Å‡∏≠‡∏¥‡∏ô
                        // ‡∏ñ‡πâ‡∏≤‡∏°‡∏µ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤
                        if (chat.product_name) {
                            appendMessage(null, chat.sender, false, null, null, {
                                productName: chat.product_name,
                                productImage: chat.product_image,
                                productPrice: chat.product_price,
                                productQuantity: chat.product_quantity,
                                sellerId: chat.seller_id,
                                currentUrl: chat.current_url
                            });
                        } else if (chat.image_url) {
                            appendMessage(chat.image_url, chat.sender, true); // ‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û
                        } else {
                            appendMessage(chat.message, chat.sender, false); // ‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏õ‡∏Å‡∏ï‡∏¥
                        }
                    });

                    setTimeout(() => {
                        smoothScrollToBottom(messages);
                    }, 100);

                })
                .catch(error => {
                    // ‡πÅ‡∏™‡∏î‡∏á‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô console log
                    console.error('Error retrieving chat history:', error);

                    // ‡∏ñ‡πâ‡∏≤ error ‡∏°‡∏≤‡∏à‡∏≤‡∏Å response (‡πÄ‡∏ä‡πà‡∏ô 404 ‡∏´‡∏£‡∏∑‡∏≠ 500)
                    if (error.response) {
                        console.log('Response data:', error.response.data);
                        console.log('Response status:', error.response.status);
                        console.log('Response headers:', error.response.headers);
                    } else if (error.request) {
                        // ‡∏ñ‡πâ‡∏≤ request ‡∏ñ‡∏π‡∏Å‡∏™‡πà‡∏á‡πÅ‡∏ï‡πà‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ‡∏£‡∏±‡∏ö response
                        console.log('Request error:', error.request);
                    } else {
                        // ‡∏ñ‡πâ‡∏≤‡πÄ‡∏õ‡πá‡∏ô error ‡∏≠‡∏∑‡πà‡∏ô ‡πÜ ‡∏ó‡∏µ‡πà‡πÄ‡∏Å‡∏µ‡πà‡∏¢‡∏ß‡∏Å‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤
                        console.log('Error message:', error.message);
                    }

                    console.log('Error config:', error.config);
                });

        }

        function appendMessage(message, senderId, isImage = false, recipientUsername, recipientId, productMessage) {
            if (!currentUserId) return;

            let messages = document.getElementById('messages');
            let messageElement = document.createElement('div');
            const fullImageUrl = message && message.startsWith('/') ? `http://localhost:8000${message}` : message;
            const username = senderId === loggedInUserId ? '‡∏Ñ‡∏∏‡∏ì' : (usersMap[senderId] ? usersMap[senderId] :
                `User ${senderId}`);

            // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡πÅ‡∏•‡∏∞‡πÅ‡∏™‡∏î‡∏á‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û
            if (isImage) {
                messageElement.classList.add('message', senderId === loggedInUserId ? 'sent' : 'received');
                messageElement.innerHTML = `<strong>${username}:</strong><br>
            <img src="${fullImageUrl}" alt="Image" style="max-width: 100%; height: auto;">`;
                console.log(`Image ${senderId === loggedInUserId ? 'sent' : 'received'}: ${fullImageUrl}`);
            }
            // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏õ‡∏Å‡∏ï‡∏¥
            else if (message) {
                messageElement.classList.add('message', senderId === loggedInUserId ? 'sent' : 'received');

                if (message.startsWith('/Chat_pic/')) {
                    messageElement.innerHTML = `<strong>${username}:</strong><br>
            <img src="${fullImageUrl}" alt="Image" style="max-width: 100%; height: auto;">`;
                    console.log(`Image received from ${username}: ${fullImageUrl}`);
                } else {
                    messageElement.innerHTML = `<strong>${username}:</strong> ${message}`;
                    console.log(`Message received from ${username}: ${message}`);
                }
            }
            // ‡∏Å‡∏£‡∏ì‡∏µ‡∏ó‡∏µ‡πà‡∏°‡∏µ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤
            else if (productMessage) {
                messageElement.classList.add('message', senderId === loggedInUserId ? 'sent' : 'received');

                // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡πÄ‡∏õ‡πá‡∏ô‡∏ß‡∏¥‡∏î‡∏µ‡πÇ‡∏≠‡∏´‡∏£‡∏∑‡∏≠‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û
                const isVideo = productMessage.productImage.endsWith('.mp4') || productMessage.productImage.endsWith(
                    '.webm');
                let productMedia = '';

                if (isVideo) {
                    // ‡∏ñ‡πâ‡∏≤‡πÄ‡∏õ‡πá‡∏ô‡∏ß‡∏¥‡∏î‡∏µ‡πÇ‡∏≠
                    productMedia = `<video width="150px" height="auto" autoplay="false">
                        <source src="${productMessage.productImage}" type="video/mp4">
                        Your browser does not support the video tag.</video>`;
                    console.log(`Video received from ${username}: ${productMessage.productImage}`);
                } else {
                    // ‡∏ñ‡πâ‡∏≤‡πÄ‡∏õ‡πá‡∏ô‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û
                    productMedia =
                        `<img src="${productMessage.productImage}" alt="Product Image" style="max-width: 150px; height: auto;">`;
                    console.log(`Image received from ${username}: ${productMessage.productImage}`);
                }

                // ‡πÅ‡∏™‡∏î‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤
                messageElement.innerHTML = `
            <strong>${username} ‡∏™‡πà‡∏á‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤:</strong>
            <div class="product">
                ${productMedia}
                <div>‡∏ä‡∏∑‡πà‡∏≠‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤: ${productMessage.productName}</div>
                <div>‡∏£‡∏≤‡∏Ñ‡∏≤: ${productMessage.productPrice} ‡∏ö‡∏≤‡∏ó</div>
                <div>‡∏à‡∏≥‡∏ô‡∏ß‡∏ô: ${productMessage.productQuantity}</div>
                <a href="${productMessage.currentUrl}" target="_blank">‡∏î‡∏π‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏ï‡∏¥‡∏°</a>
            </div>`;
            }

            // ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡πÉ‡∏´‡∏°‡πà‡∏•‡∏á‡πÉ‡∏ô element messages
            console.log('Appending message...');
            messages.appendChild(messageElement);
            messages.scrollTop = messages.scrollHeight;
        }

        function selectUser(userId) {
            // console.log('User Id:', userId);
            const urlParams = new URLSearchParams(window.location.search);
            const sellerId = urlParams.get('seller_id'); // ‡∏£‡∏±‡∏ö‡∏Ñ‡πà‡∏≤‡∏à‡∏≤‡∏Å URL
            const username_login = loggedInUserName;
            // console.log('sellerId = ', sellerId);
            // console.log('userId = ', userId);
            // console.log('username_login = ', username_login);

            // ‡πÄ‡∏ä‡πá‡∏Ñ‡πÄ‡∏á‡∏∑‡πà‡∏≠‡∏ô‡πÑ‡∏Ç‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£
            if (sellerId === userId && sellerId !== username_login) {
                // console.log('Seller ID matches userId:', sellerId);
                currentUserId = sellerId; // ‡∏Å‡∏≥‡∏´‡∏ô‡∏î currentUserId ‡πÄ‡∏õ‡πá‡∏ô sellerId
            } else {
                // console.log('Seller ID does not match userId');
                currentUserId = userId; // ‡∏´‡∏≤‡∏Å‡πÑ‡∏°‡πà‡∏ï‡∏£‡∏á‡∏Å‡∏±‡∏ô ‡∏Å‡∏≥‡∏´‡∏ô‡∏î currentUserId ‡πÄ‡∏õ‡πá‡∏ô userId
            }
            window.currentUserId = currentUserId; // ‡πÉ‡∏´‡πâ currentUserId ‡∏≠‡∏¢‡∏π‡πà‡πÉ‡∏ô scope ‡∏Ç‡∏≠‡∏á window
            // console.log('Current user', currentUserId);
            document.getElementById('recipient_input').value = currentUserId; // ‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡∏ä‡∏∑‡πà‡∏≠‡∏ú‡∏π‡πâ‡∏£‡∏±‡∏ö‡πÉ‡∏ô input
            // console.log('Recipient username', usersMap[currentUserId]);
            document.getElementById('message_input').placeholder = '‡∏û‡∏¥‡∏°‡∏û‡πå‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ñ‡∏∂‡∏á ' + userId + '...';
            document.getElementById('selected-user').innerText = '‡∏Å‡∏≥‡∏•‡∏±‡∏á‡πÅ‡∏ä‡∏ó‡∏Å‡∏±‡∏ö: ' + userId;
            // console.log('currentUserId:', currentUserId);

            document.getElementById('message_input').disabled = false;
            document.getElementById('message_send').disabled = false;

            const event = new CustomEvent('userSelected', {
                detail: currentUserId
            });
            document.dispatchEvent(event);

            getChatHistory(currentUserId);

            // setInterval(() => {
            //     if (currentUserId && loggedInUserId) {
            //         getChatHistory(currentUserId);
            //     }
            // }, 5000);
        }

        document.getElementById('attach_image').addEventListener('click', function() {
            if (!currentUserId) {
                alert('‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏™‡πà‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏Å‡πà‡∏≠‡∏ô');
                return;
            }
            const fileInput = document.createElement('input');
            fileInput.type = 'file';
            fileInput.accept = 'image/jpeg, image/png, image/jpg, image/gif';

            fileInput.onchange = function(event) {
                const file = event.target.files[0];
                if (file) {
                    const formData = new FormData();
                    formData.append('image', file);
                    formData.append('recipient', currentUserId);

                    console.log('FormData:', formData); // Log ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Ç‡∏≠‡∏á FormData

                    axios.post('/upload-image', formData, {
                            headers: {
                                'Content-Type': 'multipart/form-data'
                            }
                        })
                        .then(response => {
                            if (response.data.success) {
                                // ‡∏™‡∏£‡πâ‡∏≤‡∏á URL ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û‡∏ó‡∏µ‡πà‡∏≠‡∏±‡∏õ‡πÇ‡∏´‡∏•‡∏î
                                const imageUrl = response.data.imageUrl;

                                // ‡∏™‡πà‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡πÑ‡∏õ‡∏¢‡∏±‡∏á‡∏ú‡∏π‡πâ‡∏£‡∏±‡∏ö‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÉ‡∏´‡πâ‡πÄ‡∏´‡πá‡∏ô‡∏†‡∏≤‡∏û‡∏ó‡∏µ‡πà‡∏™‡πà‡∏á
                                axios.post('/send-message2', {
                                        message: imageUrl, // ‡πÉ‡∏ä‡πâ URL ‡∏Ç‡∏≠‡∏á‡∏†‡∏≤‡∏û‡∏ó‡∏µ‡πà‡∏≠‡∏±‡∏õ‡πÇ‡∏´‡∏•‡∏î
                                        recipient: currentUserId
                                        // })
                                        // .then(() => {
                                        //     // ‡πÄ‡∏£‡∏µ‡∏¢‡∏Å‡πÉ‡∏ä‡πâ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô appendMessage ‡∏ó‡∏µ‡πà‡∏ù‡∏±‡πà‡∏á‡∏ú‡∏π‡πâ‡∏™‡πà‡∏á
                                        //     appendMessage(imageUrl, loggedInUserId, true);
                                    })
                                    .catch(error => {
                                        console.error('Error sending image message:', error);
                                    });
                            } else {
                                alert('‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏≠‡∏±‡∏õ‡πÇ‡∏´‡∏•‡∏î‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û‡πÑ‡∏î‡πâ');
                            }
                        })
                        .catch(error => {
                            console.error('Error uploading image:', error);
                        });
                }
            };

            fileInput.click(); // ‡πÄ‡∏õ‡∏¥‡∏î‡∏Å‡∏•‡πà‡∏≠‡∏á‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡πÑ‡∏ü‡∏•‡πå
        });

        function goBack() {
            window.history.back(); // ‡πÉ‡∏ä‡πâ‡∏õ‡∏£‡∏∞‡∏ß‡∏±‡∏ï‡∏¥‡∏Å‡∏≤‡∏£‡πÄ‡∏Ç‡πâ‡∏≤‡∏ä‡∏°‡∏Å‡∏•‡∏±‡∏ö‡πÑ‡∏õ‡∏¢‡∏±‡∏á‡∏´‡∏ô‡πâ‡∏≤‡∏Å‡πà‡∏≠‡∏ô‡∏´‡∏ô‡πâ‡∏≤
        }

    </script>


</body>

</html>
